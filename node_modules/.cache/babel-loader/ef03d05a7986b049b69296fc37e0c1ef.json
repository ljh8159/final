{"ast":null,"code":"var _jsxFileName = \"D:\\\\OneDrive\\\\web\\\\test\\\\src\\\\pages\\\\MapPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport styles from '../styles/MapPage.module.css';\nimport proj4 from \"proj4\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction geoJsonCoordsToLatLngArray(coords) {\n  const epsg3857 = \"+proj=merc +lon_0=0 +k=1 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs\";\n  const wgs84 = \"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs\";\n  return coords[0].map(([x, y]) => {\n    // 혹시 lng/lat이 뒤집혀 보이면 [y, x]로 바꿔서 시도해보세요!\n    const [lng, lat] = proj4(epsg3857, wgs84, [y, x]);\n    return new window.kakao.maps.LatLng(lat, lng);\n  });\n}\nconst MapPage = () => {\n  _s();\n  const mapRef = useRef(null);\n  const [address, setAddress] = useState('');\n  const [image, setImage] = useState(null);\n  const markersRef = useRef([]);\n  useEffect(() => {\n    function initMap() {\n      window.kakao.maps.load(() => {\n        const container = document.getElementById('map');\n        const options = {\n          center: new window.kakao.maps.LatLng(36.1195, 128.3446),\n          level: 4\n        };\n        const map = new window.kakao.maps.Map(container, options);\n        mapRef.current = map;\n\n        // 1. 침수지역 폴리곤 표시\n        fetch('/flood/floodmap.json').then(res => res.json()).then(data => {\n          data.features.forEach(feature => {\n            const geometry = feature.geometry;\n            if (!geometry || geometry.type !== \"Polygon\") return;\n            const coords = geoJsonCoordsToLatLngArray(geometry.coordinates);\n\n            // 0,0만 있는 좌표는 건너뜀\n            if (coords.every(c => c.getLat() === 0 && c.getLng() === 0)) return;\n\n            // ★ 첫 꼭짓점에 마커 찍기 (테스트용) -- 이 부분 삭제\n            // new window.kakao.maps.Marker({\n            //   position: coords[0],\n            //   map: map\n            // });\n\n            const grade = Number(feature.properties.FLDN_GRD);\n            const colors = ['rgba(255,0,0,0.5)',\n            // 1등급: 빨강\n            'rgba(255,140,0,0.5)',\n            // 2등급: 주황\n            'rgba(255,255,0,0.5)',\n            // 3등급: 노랑\n            'rgba(0,200,255,0.5)',\n            // 4등급: 하늘\n            'rgba(0,0,255,0.5)' // 5등급: 파랑\n            ];\n            const borderColors = ['#b30000',\n            // 1등급: 진한 빨강\n            '#b36b00',\n            // 2등급: 진한 주황\n            '#b3b300',\n            // 3등급: 진한 노랑\n            '#0080b3',\n            // 4등급: 진한 하늘\n            '#0000b3' // 5등급: 진한 파랑\n            ];\n            const color = colors[grade - 1] || 'rgba(0,0,0,0.5)';\n            const borderColor = borderColors[grade - 1] || '#333';\n            new window.kakao.maps.Polygon({\n              map: map,\n              path: coords,\n              strokeWeight: 3,\n              strokeColor: borderColor,\n              strokeOpacity: 1,\n              fillColor: color,\n              fillOpacity: 0.5\n            });\n          });\n\n          // 기존 마커 불러오기\n          fetch('http://localhost:5000/reports').then(res => res.json()).then(data => {\n            data.forEach(report => {\n              if (report.stage === 3) {\n                // 3단계만 마커 표시\n                const markerPosition = new window.kakao.maps.LatLng(report.lat, report.lng);\n                const marker = new window.kakao.maps.Marker({\n                  position: markerPosition,\n                  map: map\n                });\n                markersRef.current.push(marker);\n              }\n            });\n          });\n\n          // 지도 클릭 시 신고\n          window.kakao.maps.event.addListener(map, 'click', function (mouseEvent) {\n            const latlng = mouseEvent.latLng;\n            // 주소 변환\n            const geocoder = new window.kakao.maps.services.Geocoder();\n            geocoder.coord2Address(latlng.getLng(), latlng.getLat(), function (result, status) {\n              if (status === window.kakao.maps.services.Status.OK) {\n                const addr = result[0].address.address_name;\n                setAddress(addr);\n\n                // 사진 업로드가 선택되지 않은 경우 안내\n                if (!image) {\n                  alert(\"사진을 먼저 업로드 해주세요!\");\n                  return;\n                }\n\n                // 신고 전송 (FormData 사용)\n                const timestamp = new Date().toISOString();\n                const formData = new FormData();\n                formData.append('lat', latlng.getLat());\n                formData.append('lng', latlng.getLng());\n                formData.append('address', addr);\n                formData.append('timestamp', timestamp);\n                formData.append('image', image);\n                fetch('http://localhost:5000/report', {\n                  method: 'POST',\n                  body: formData\n                }).then(res => res.json()).then(data => {\n                  alert(data.message);\n                  // 3단계일 때만 마커 추가\n                  if (data.status === \"accept\") {\n                    const marker = new window.kakao.maps.Marker({\n                      position: latlng,\n                      map: map\n                    });\n                    markersRef.current.push(marker);\n                  }\n                  // 4단계면 공공기관 사이트로 이동\n                  if (data.status === \"redirect\") {\n                    window.open(\"https://www.safekorea.go.kr/\", \"_blank\");\n                  }\n                });\n              }\n            });\n          });\n        });\n      });\n    }\n    if (!window.kakao) {\n      const script = document.createElement('script');\n      script.src = `https://dapi.kakao.com/v2/maps/sdk.js?appkey=f3431dbe0250d319e254837045e1ef8a&autoload=false&libraries=services`;\n      script.async = true;\n      document.head.appendChild(script);\n      script.onload = initMap;\n    } else {\n      initMap();\n    }\n    // eslint-disable-next-line\n  }, [image]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: styles.title,\n      children: \"\\uD83D\\uDCCD \\uB3C4\\uB85C\\uB6AB\\uC774\\uB2E8 - \\uD558\\uC218\\uAD6C \\uC9C0\\uB3C4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"\\uC0AC\\uC9C4 \\uC5C5\\uB85C\\uB4DC:\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: e => setImage(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.mapArea,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"map\",\n        style: {\n          width: '100%',\n          height: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\uD83D\\uDDFA\\uFE0F \\uD604\\uC7AC \\uD074\\uB9AD\\uD55C \\uC8FC\\uC18C: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: address\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n};\n_s(MapPage, \"AFLb28yl1agLAv83XuLIn4dLy5s=\");\n_c = MapPage;\nexport default MapPage;\nvar _c;\n$RefreshReg$(_c, \"MapPage\");","map":{"version":3,"names":["React","useEffect","useRef","useState","styles","proj4","jsxDEV","_jsxDEV","geoJsonCoordsToLatLngArray","coords","epsg3857","wgs84","map","x","y","lng","lat","window","kakao","maps","LatLng","MapPage","_s","mapRef","address","setAddress","image","setImage","markersRef","initMap","load","container","document","getElementById","options","center","level","Map","current","fetch","then","res","json","data","features","forEach","feature","geometry","type","coordinates","every","c","getLat","getLng","grade","Number","properties","FLDN_GRD","colors","borderColors","color","borderColor","Polygon","path","strokeWeight","strokeColor","strokeOpacity","fillColor","fillOpacity","report","stage","markerPosition","marker","Marker","position","push","event","addListener","mouseEvent","latlng","latLng","geocoder","services","Geocoder","coord2Address","result","status","Status","OK","addr","address_name","alert","timestamp","Date","toISOString","formData","FormData","append","method","body","message","open","script","createElement","src","async","head","appendChild","onload","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","accept","onChange","e","target","files","mapArea","id","style","width","height","_c","$RefreshReg$"],"sources":["D:/OneDrive/web/test/src/pages/MapPage.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport styles from '../styles/MapPage.module.css';\r\nimport proj4 from \"proj4\";\r\n\r\nfunction geoJsonCoordsToLatLngArray(coords) {\r\n  const epsg3857 = \"+proj=merc +lon_0=0 +k=1 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs\";\r\n  const wgs84 = \"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs\";\r\n  return coords[0].map(([x, y]) => {\r\n    // 혹시 lng/lat이 뒤집혀 보이면 [y, x]로 바꿔서 시도해보세요!\r\n    const [lng, lat] = proj4(epsg3857, wgs84, [y, x]);\r\n    return new window.kakao.maps.LatLng(lat, lng);\r\n  });\r\n}\r\nconst MapPage = () => {\r\n  const mapRef = useRef(null);\r\n  const [address, setAddress] = useState('');\r\n  const [image, setImage] = useState(null);\r\n  const markersRef = useRef([]);\r\n\r\n  useEffect(() => {\r\n    function initMap() {\r\n      window.kakao.maps.load(() => {\r\n        const container = document.getElementById('map');\r\n        const options = {\r\n          center: new window.kakao.maps.LatLng(36.1195, 128.3446),\r\n          level: 4\r\n        };\r\n        const map = new window.kakao.maps.Map(container, options);\r\n        mapRef.current = map;\r\n\r\n        // 1. 침수지역 폴리곤 표시\r\n        fetch('/flood/floodmap.json')\r\n          .then(res => res.json())\r\n          .then(data => {\r\n            data.features.forEach(feature => {\r\n              const geometry = feature.geometry;\r\n              if (!geometry || geometry.type !== \"Polygon\") return;\r\n              const coords = geoJsonCoordsToLatLngArray(geometry.coordinates);\r\n\r\n              // 0,0만 있는 좌표는 건너뜀\r\n              if (coords.every(c => c.getLat() === 0 && c.getLng() === 0)) return;\r\n\r\n              // ★ 첫 꼭짓점에 마커 찍기 (테스트용) -- 이 부분 삭제\r\n              // new window.kakao.maps.Marker({\r\n              //   position: coords[0],\r\n              //   map: map\r\n              // });\r\n\r\n              const grade = Number(feature.properties.FLDN_GRD);\r\n              const colors = [\r\n                'rgba(255,0,0,0.5)',    // 1등급: 빨강\r\n                'rgba(255,140,0,0.5)',  // 2등급: 주황\r\n                'rgba(255,255,0,0.5)',  // 3등급: 노랑\r\n                'rgba(0,200,255,0.5)',  // 4등급: 하늘\r\n                'rgba(0,0,255,0.5)'     // 5등급: 파랑\r\n              ];\r\n              const borderColors = [\r\n                '#b30000',  // 1등급: 진한 빨강\r\n                '#b36b00',  // 2등급: 진한 주황\r\n                '#b3b300',  // 3등급: 진한 노랑\r\n                '#0080b3',  // 4등급: 진한 하늘\r\n                '#0000b3'   // 5등급: 진한 파랑\r\n              ];\r\n              const color = colors[grade - 1] || 'rgba(0,0,0,0.5)';\r\n              const borderColor = borderColors[grade - 1] || '#333';\r\n\r\n              new window.kakao.maps.Polygon({\r\n                map: map,\r\n                path: coords,\r\n                strokeWeight: 3,\r\n                strokeColor: borderColor,\r\n                strokeOpacity: 1,\r\n                fillColor: color,\r\n                fillOpacity: 0.5\r\n              });\r\n            });\r\n\r\n            // 기존 마커 불러오기\r\n            fetch('http://localhost:5000/reports')\r\n              .then(res => res.json())\r\n              .then(data => {\r\n                data.forEach(report => {\r\n                  if (report.stage === 3) { // 3단계만 마커 표시\r\n                    const markerPosition = new window.kakao.maps.LatLng(report.lat, report.lng);\r\n                    const marker = new window.kakao.maps.Marker({\r\n                      position: markerPosition,\r\n                      map: map\r\n                    });\r\n                    markersRef.current.push(marker);\r\n                  }\r\n                });\r\n              });\r\n\r\n            // 지도 클릭 시 신고\r\n            window.kakao.maps.event.addListener(map, 'click', function (mouseEvent) {\r\n              const latlng = mouseEvent.latLng;\r\n              // 주소 변환\r\n              const geocoder = new window.kakao.maps.services.Geocoder();\r\n              geocoder.coord2Address(latlng.getLng(), latlng.getLat(), function (result, status) {\r\n                if (status === window.kakao.maps.services.Status.OK) {\r\n                  const addr = result[0].address.address_name;\r\n                  setAddress(addr);\r\n\r\n                  // 사진 업로드가 선택되지 않은 경우 안내\r\n                  if (!image) {\r\n                    alert(\"사진을 먼저 업로드 해주세요!\");\r\n                    return;\r\n                  }\r\n\r\n                  // 신고 전송 (FormData 사용)\r\n                  const timestamp = new Date().toISOString();\r\n                  const formData = new FormData();\r\n                  formData.append('lat', latlng.getLat());\r\n                  formData.append('lng', latlng.getLng());\r\n                  formData.append('address', addr);\r\n                  formData.append('timestamp', timestamp);\r\n                  formData.append('image', image);\r\n\r\n                  fetch('http://localhost:5000/report', {\r\n                    method: 'POST',\r\n                    body: formData\r\n                  })\r\n                    .then(res => res.json())\r\n                    .then(data => {\r\n                      alert(data.message);\r\n                      // 3단계일 때만 마커 추가\r\n                      if (data.status === \"accept\") {\r\n                        const marker = new window.kakao.maps.Marker({\r\n                          position: latlng,\r\n                          map: map\r\n                        });\r\n                        markersRef.current.push(marker);\r\n                      }\r\n                      // 4단계면 공공기관 사이트로 이동\r\n                      if (data.status === \"redirect\") {\r\n                        window.open(\"https://www.safekorea.go.kr/\", \"_blank\");\r\n                      }\r\n                    });\r\n                }\r\n              });\r\n            });\r\n          });\r\n      });\r\n    }\r\n\r\n    if (!window.kakao) {\r\n      const script = document.createElement('script');\r\n      script.src = `https://dapi.kakao.com/v2/maps/sdk.js?appkey=f3431dbe0250d319e254837045e1ef8a&autoload=false&libraries=services`;\r\n      script.async = true;\r\n      document.head.appendChild(script);\r\n      script.onload = initMap;\r\n    } else {\r\n      initMap();\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [image]);\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <h2 className={styles.title}>📍 도로뚫이단 - 하수구 지도</h2>\r\n      <label>\r\n        사진 업로드:&nbsp;\r\n        <input\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          onChange={e => setImage(e.target.files[0])}\r\n        />\r\n      </label>\r\n      <div className={styles.mapArea}>\r\n        <div id=\"map\" style={{ width: '100%', height: '100%' }}></div>\r\n      </div>\r\n      <p>🗺️ 현재 클릭한 주소: <strong>{address}</strong></p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}