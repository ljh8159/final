{"ast":null,"code":"/**\n * Detects whether the WKT string is WKT1 or WKT2.\n * @param {string} wkt The WKT string.\n * @returns {string} The detected version (\"WKT1\" or \"WKT2\").\n */\nexport function detectWKTVersion(wkt) {\n  // Normalize the WKT string for easier keyword matching\n  const normalizedWKT = wkt.toUpperCase();\n\n  // Check for WKT2-specific keywords\n  if (normalizedWKT.includes('PROJCRS') || normalizedWKT.includes('GEOGCRS') || normalizedWKT.includes('BOUNDCRS') || normalizedWKT.includes('VERTCRS') || normalizedWKT.includes('LENGTHUNIT') || normalizedWKT.includes('ANGLEUNIT') || normalizedWKT.includes('SCALEUNIT')) {\n    return 'WKT2';\n  }\n\n  // Check for WKT1-specific keywords\n  if (normalizedWKT.includes('PROJCS') || normalizedWKT.includes('GEOGCS') || normalizedWKT.includes('LOCAL_CS') || normalizedWKT.includes('VERT_CS') || normalizedWKT.includes('UNIT')) {\n    return 'WKT1';\n  }\n\n  // Default to WKT1 if no specific indicators are found\n  return 'WKT1';\n}","map":{"version":3,"names":["detectWKTVersion","wkt","normalizedWKT","toUpperCase","includes"],"sources":["D:/OneDrive/web/test/node_modules/wkt-parser/detectWKTVersion.js"],"sourcesContent":["/**\n * Detects whether the WKT string is WKT1 or WKT2.\n * @param {string} wkt The WKT string.\n * @returns {string} The detected version (\"WKT1\" or \"WKT2\").\n */\nexport function detectWKTVersion(wkt) {\n  // Normalize the WKT string for easier keyword matching\n  const normalizedWKT = wkt.toUpperCase();\n\n  // Check for WKT2-specific keywords\n  if (\n    normalizedWKT.includes('PROJCRS') ||\n    normalizedWKT.includes('GEOGCRS') ||\n    normalizedWKT.includes('BOUNDCRS') ||\n    normalizedWKT.includes('VERTCRS') ||\n    normalizedWKT.includes('LENGTHUNIT') ||\n    normalizedWKT.includes('ANGLEUNIT') ||\n    normalizedWKT.includes('SCALEUNIT')\n  ) {\n    return 'WKT2';\n  }\n\n  // Check for WKT1-specific keywords\n  if (\n    normalizedWKT.includes('PROJCS') ||\n    normalizedWKT.includes('GEOGCS') ||\n    normalizedWKT.includes('LOCAL_CS') ||\n    normalizedWKT.includes('VERT_CS') ||\n    normalizedWKT.includes('UNIT')\n  ) {\n    return 'WKT1';\n  }\n\n  // Default to WKT1 if no specific indicators are found\n  return 'WKT1';\n}"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,gBAAgBA,CAACC,GAAG,EAAE;EACpC;EACA,MAAMC,aAAa,GAAGD,GAAG,CAACE,WAAW,CAAC,CAAC;;EAEvC;EACA,IACED,aAAa,CAACE,QAAQ,CAAC,SAAS,CAAC,IACjCF,aAAa,CAACE,QAAQ,CAAC,SAAS,CAAC,IACjCF,aAAa,CAACE,QAAQ,CAAC,UAAU,CAAC,IAClCF,aAAa,CAACE,QAAQ,CAAC,SAAS,CAAC,IACjCF,aAAa,CAACE,QAAQ,CAAC,YAAY,CAAC,IACpCF,aAAa,CAACE,QAAQ,CAAC,WAAW,CAAC,IACnCF,aAAa,CAACE,QAAQ,CAAC,WAAW,CAAC,EACnC;IACA,OAAO,MAAM;EACf;;EAEA;EACA,IACEF,aAAa,CAACE,QAAQ,CAAC,QAAQ,CAAC,IAChCF,aAAa,CAACE,QAAQ,CAAC,QAAQ,CAAC,IAChCF,aAAa,CAACE,QAAQ,CAAC,UAAU,CAAC,IAClCF,aAAa,CAACE,QAAQ,CAAC,SAAS,CAAC,IACjCF,aAAa,CAACE,QAAQ,CAAC,MAAM,CAAC,EAC9B;IACA,OAAO,MAAM;EACf;;EAEA;EACA,OAAO,MAAM;AACf","ignoreList":[]},"metadata":{},"sourceType":"module"}