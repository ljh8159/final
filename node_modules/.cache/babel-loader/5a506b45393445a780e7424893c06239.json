{"ast":null,"code":"import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport { EPSLN, HALF_PI, TWO_PI, FORTPI } from '../constants/values';\nimport { getNormalizedProjName } from '../projections';\nvar TOL = 1e-7;\nfunction isTypeA(P) {\n  var typeAProjections = ['Hotine_Oblique_Mercator', 'Hotine_Oblique_Mercator_variant_A', 'Hotine_Oblique_Mercator_Azimuth_Natural_Origin'];\n  var projectionName = typeof P.projName === 'object' ? Object.keys(P.projName)[0] : P.projName;\n  return 'no_uoff' in P || 'no_off' in P || typeAProjections.indexOf(projectionName) !== -1 || typeAProjections.indexOf(getNormalizedProjName(projectionName)) !== -1;\n}\n\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------ */\nexport function init() {\n  var con,\n    com,\n    cosph0,\n    D,\n    F,\n    H,\n    L,\n    sinph0,\n    p,\n    J,\n    gamma = 0,\n    gamma0,\n    lamc = 0,\n    lam1 = 0,\n    lam2 = 0,\n    phi1 = 0,\n    phi2 = 0,\n    alpha_c = 0;\n\n  // only Type A uses the no_off or no_uoff property\n  // https://github.com/OSGeo/proj.4/issues/104\n  this.no_off = isTypeA(this);\n  this.no_rot = 'no_rot' in this;\n  var alp = false;\n  if ('alpha' in this) {\n    alp = true;\n  }\n  var gam = false;\n  if ('rectified_grid_angle' in this) {\n    gam = true;\n  }\n  if (alp) {\n    alpha_c = this.alpha;\n  }\n  if (gam) {\n    gamma = this.rectified_grid_angle;\n  }\n  if (alp || gam) {\n    lamc = this.longc;\n  } else {\n    lam1 = this.long1;\n    phi1 = this.lat1;\n    lam2 = this.long2;\n    phi2 = this.lat2;\n    if (Math.abs(phi1 - phi2) <= TOL || (con = Math.abs(phi1)) <= TOL || Math.abs(con - HALF_PI) <= TOL || Math.abs(Math.abs(this.lat0) - HALF_PI) <= TOL || Math.abs(Math.abs(phi2) - HALF_PI) <= TOL) {\n      throw new Error();\n    }\n  }\n  var one_es = 1.0 - this.es;\n  com = Math.sqrt(one_es);\n  if (Math.abs(this.lat0) > EPSLN) {\n    sinph0 = Math.sin(this.lat0);\n    cosph0 = Math.cos(this.lat0);\n    con = 1 - this.es * sinph0 * sinph0;\n    this.B = cosph0 * cosph0;\n    this.B = Math.sqrt(1 + this.es * this.B * this.B / one_es);\n    this.A = this.B * this.k0 * com / con;\n    D = this.B * com / (cosph0 * Math.sqrt(con));\n    F = D * D - 1;\n    if (F <= 0) {\n      F = 0;\n    } else {\n      F = Math.sqrt(F);\n      if (this.lat0 < 0) {\n        F = -F;\n      }\n    }\n    this.E = F += D;\n    this.E *= Math.pow(tsfnz(this.e, this.lat0, sinph0), this.B);\n  } else {\n    this.B = 1 / com;\n    this.A = this.k0;\n    this.E = D = F = 1;\n  }\n  if (alp || gam) {\n    if (alp) {\n      gamma0 = Math.asin(Math.sin(alpha_c) / D);\n      if (!gam) {\n        gamma = alpha_c;\n      }\n    } else {\n      gamma0 = gamma;\n      alpha_c = Math.asin(D * Math.sin(gamma0));\n    }\n    this.lam0 = lamc - Math.asin(0.5 * (F - 1 / F) * Math.tan(gamma0)) / this.B;\n  } else {\n    H = Math.pow(tsfnz(this.e, phi1, Math.sin(phi1)), this.B);\n    L = Math.pow(tsfnz(this.e, phi2, Math.sin(phi2)), this.B);\n    F = this.E / H;\n    p = (L - H) / (L + H);\n    J = this.E * this.E;\n    J = (J - L * H) / (J + L * H);\n    con = lam1 - lam2;\n    if (con < -Math.pi) {\n      lam2 -= TWO_PI;\n    } else if (con > Math.pi) {\n      lam2 += TWO_PI;\n    }\n    this.lam0 = adjust_lon(0.5 * (lam1 + lam2) - Math.atan(J * Math.tan(0.5 * this.B * (lam1 - lam2)) / p) / this.B);\n    gamma0 = Math.atan(2 * Math.sin(this.B * adjust_lon(lam1 - this.lam0)) / (F - 1 / F));\n    gamma = alpha_c = Math.asin(D * Math.sin(gamma0));\n  }\n  this.singam = Math.sin(gamma0);\n  this.cosgam = Math.cos(gamma0);\n  this.sinrot = Math.sin(gamma);\n  this.cosrot = Math.cos(gamma);\n  this.rB = 1 / this.B;\n  this.ArB = this.A * this.rB;\n  this.BrA = 1 / this.ArB;\n  if (this.no_off) {\n    this.u_0 = 0;\n  } else {\n    this.u_0 = Math.abs(this.ArB * Math.atan(Math.sqrt(D * D - 1) / Math.cos(alpha_c)));\n    if (this.lat0 < 0) {\n      this.u_0 = -this.u_0;\n    }\n  }\n  F = 0.5 * gamma0;\n  this.v_pole_n = this.ArB * Math.log(Math.tan(FORTPI - F));\n  this.v_pole_s = this.ArB * Math.log(Math.tan(FORTPI + F));\n}\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ---------------------------------------------------------- */\nexport function forward(p) {\n  var coords = {};\n  var S, T, U, V, W, temp, u, v;\n  p.x = p.x - this.lam0;\n  if (Math.abs(Math.abs(p.y) - HALF_PI) > EPSLN) {\n    W = this.E / Math.pow(tsfnz(this.e, p.y, Math.sin(p.y)), this.B);\n    temp = 1 / W;\n    S = 0.5 * (W - temp);\n    T = 0.5 * (W + temp);\n    V = Math.sin(this.B * p.x);\n    U = (S * this.singam - V * this.cosgam) / T;\n    if (Math.abs(Math.abs(U) - 1.0) < EPSLN) {\n      throw new Error();\n    }\n    v = 0.5 * this.ArB * Math.log((1 - U) / (1 + U));\n    temp = Math.cos(this.B * p.x);\n    if (Math.abs(temp) < TOL) {\n      u = this.A * p.x;\n    } else {\n      u = this.ArB * Math.atan2(S * this.cosgam + V * this.singam, temp);\n    }\n  } else {\n    v = p.y > 0 ? this.v_pole_n : this.v_pole_s;\n    u = this.ArB * p.y;\n  }\n  if (this.no_rot) {\n    coords.x = u;\n    coords.y = v;\n  } else {\n    u -= this.u_0;\n    coords.x = v * this.cosrot + u * this.sinrot;\n    coords.y = u * this.cosrot - v * this.sinrot;\n  }\n  coords.x = this.a * coords.x + this.x0;\n  coords.y = this.a * coords.y + this.y0;\n  return coords;\n}\nexport function inverse(p) {\n  var u, v, Qp, Sp, Tp, Vp, Up;\n  var coords = {};\n  p.x = (p.x - this.x0) * (1.0 / this.a);\n  p.y = (p.y - this.y0) * (1.0 / this.a);\n  if (this.no_rot) {\n    v = p.y;\n    u = p.x;\n  } else {\n    v = p.x * this.cosrot - p.y * this.sinrot;\n    u = p.y * this.cosrot + p.x * this.sinrot + this.u_0;\n  }\n  Qp = Math.exp(-this.BrA * v);\n  Sp = 0.5 * (Qp - 1 / Qp);\n  Tp = 0.5 * (Qp + 1 / Qp);\n  Vp = Math.sin(this.BrA * u);\n  Up = (Vp * this.cosgam + Sp * this.singam) / Tp;\n  if (Math.abs(Math.abs(Up) - 1) < EPSLN) {\n    coords.x = 0;\n    coords.y = Up < 0 ? -HALF_PI : HALF_PI;\n  } else {\n    coords.y = this.E / Math.sqrt((1 + Up) / (1 - Up));\n    coords.y = phi2z(this.e, Math.pow(coords.y, 1 / this.B));\n    if (coords.y === Infinity) {\n      throw new Error();\n    }\n    coords.x = -this.rB * Math.atan2(Sp * this.cosgam - Vp * this.singam, Math.cos(this.BrA * u));\n  }\n  coords.x += this.lam0;\n  return coords;\n}\nexport var names = ['Hotine_Oblique_Mercator', 'Hotine Oblique Mercator', 'Hotine_Oblique_Mercator_variant_A', 'Hotine_Oblique_Mercator_Variant_B', 'Hotine_Oblique_Mercator_Azimuth_Natural_Origin', 'Hotine_Oblique_Mercator_Two_Point_Natural_Origin', 'Hotine_Oblique_Mercator_Azimuth_Center', 'Oblique_Mercator', 'omerc'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","map":{"version":3,"names":["tsfnz","adjust_lon","phi2z","EPSLN","HALF_PI","TWO_PI","FORTPI","getNormalizedProjName","TOL","isTypeA","P","typeAProjections","projectionName","projName","Object","keys","indexOf","init","con","com","cosph0","D","F","H","L","sinph0","p","J","gamma","gamma0","lamc","lam1","lam2","phi1","phi2","alpha_c","no_off","no_rot","alp","gam","alpha","rectified_grid_angle","longc","long1","lat1","long2","lat2","Math","abs","lat0","Error","one_es","es","sqrt","sin","cos","B","A","k0","E","pow","e","asin","lam0","tan","pi","atan","singam","cosgam","sinrot","cosrot","rB","ArB","BrA","u_0","v_pole_n","log","v_pole_s","forward","coords","S","T","U","V","W","temp","u","v","x","y","atan2","a","x0","y0","inverse","Qp","Sp","Tp","Vp","Up","exp","Infinity","names"],"sources":["D:/OneDrive/web/test/node_modules/proj4/lib/projections/omerc.js"],"sourcesContent":["import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport { EPSLN, HALF_PI, TWO_PI, FORTPI } from '../constants/values';\nimport { getNormalizedProjName } from '../projections';\n\nvar TOL = 1e-7;\n\nfunction isTypeA(P) {\n  var typeAProjections = ['Hotine_Oblique_Mercator', 'Hotine_Oblique_Mercator_variant_A', 'Hotine_Oblique_Mercator_Azimuth_Natural_Origin'];\n  var projectionName = typeof P.projName === 'object' ? Object.keys(P.projName)[0] : P.projName;\n\n  return 'no_uoff' in P || 'no_off' in P || typeAProjections.indexOf(projectionName) !== -1 || typeAProjections.indexOf(getNormalizedProjName(projectionName)) !== -1;\n}\n\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------ */\nexport function init() {\n  var con, com, cosph0, D, F, H, L, sinph0, p, J, gamma = 0,\n    gamma0, lamc = 0, lam1 = 0, lam2 = 0, phi1 = 0, phi2 = 0, alpha_c = 0;\n\n  // only Type A uses the no_off or no_uoff property\n  // https://github.com/OSGeo/proj.4/issues/104\n  this.no_off = isTypeA(this);\n  this.no_rot = 'no_rot' in this;\n\n  var alp = false;\n  if ('alpha' in this) {\n    alp = true;\n  }\n\n  var gam = false;\n  if ('rectified_grid_angle' in this) {\n    gam = true;\n  }\n\n  if (alp) {\n    alpha_c = this.alpha;\n  }\n\n  if (gam) {\n    gamma = this.rectified_grid_angle;\n  }\n\n  if (alp || gam) {\n    lamc = this.longc;\n  } else {\n    lam1 = this.long1;\n    phi1 = this.lat1;\n    lam2 = this.long2;\n    phi2 = this.lat2;\n\n    if (Math.abs(phi1 - phi2) <= TOL || (con = Math.abs(phi1)) <= TOL\n      || Math.abs(con - HALF_PI) <= TOL || Math.abs(Math.abs(this.lat0) - HALF_PI) <= TOL\n      || Math.abs(Math.abs(phi2) - HALF_PI) <= TOL) {\n      throw new Error();\n    }\n  }\n\n  var one_es = 1.0 - this.es;\n  com = Math.sqrt(one_es);\n\n  if (Math.abs(this.lat0) > EPSLN) {\n    sinph0 = Math.sin(this.lat0);\n    cosph0 = Math.cos(this.lat0);\n    con = 1 - this.es * sinph0 * sinph0;\n    this.B = cosph0 * cosph0;\n    this.B = Math.sqrt(1 + this.es * this.B * this.B / one_es);\n    this.A = this.B * this.k0 * com / con;\n    D = this.B * com / (cosph0 * Math.sqrt(con));\n    F = D * D - 1;\n\n    if (F <= 0) {\n      F = 0;\n    } else {\n      F = Math.sqrt(F);\n      if (this.lat0 < 0) {\n        F = -F;\n      }\n    }\n\n    this.E = F += D;\n    this.E *= Math.pow(tsfnz(this.e, this.lat0, sinph0), this.B);\n  } else {\n    this.B = 1 / com;\n    this.A = this.k0;\n    this.E = D = F = 1;\n  }\n\n  if (alp || gam) {\n    if (alp) {\n      gamma0 = Math.asin(Math.sin(alpha_c) / D);\n      if (!gam) {\n        gamma = alpha_c;\n      }\n    } else {\n      gamma0 = gamma;\n      alpha_c = Math.asin(D * Math.sin(gamma0));\n    }\n    this.lam0 = lamc - Math.asin(0.5 * (F - 1 / F) * Math.tan(gamma0)) / this.B;\n  } else {\n    H = Math.pow(tsfnz(this.e, phi1, Math.sin(phi1)), this.B);\n    L = Math.pow(tsfnz(this.e, phi2, Math.sin(phi2)), this.B);\n    F = this.E / H;\n    p = (L - H) / (L + H);\n    J = this.E * this.E;\n    J = (J - L * H) / (J + L * H);\n    con = lam1 - lam2;\n\n    if (con < -Math.pi) {\n      lam2 -= TWO_PI;\n    } else if (con > Math.pi) {\n      lam2 += TWO_PI;\n    }\n\n    this.lam0 = adjust_lon(0.5 * (lam1 + lam2) - Math.atan(J * Math.tan(0.5 * this.B * (lam1 - lam2)) / p) / this.B);\n    gamma0 = Math.atan(2 * Math.sin(this.B * adjust_lon(lam1 - this.lam0)) / (F - 1 / F));\n    gamma = alpha_c = Math.asin(D * Math.sin(gamma0));\n  }\n\n  this.singam = Math.sin(gamma0);\n  this.cosgam = Math.cos(gamma0);\n  this.sinrot = Math.sin(gamma);\n  this.cosrot = Math.cos(gamma);\n\n  this.rB = 1 / this.B;\n  this.ArB = this.A * this.rB;\n  this.BrA = 1 / this.ArB;\n\n  if (this.no_off) {\n    this.u_0 = 0;\n  } else {\n    this.u_0 = Math.abs(this.ArB * Math.atan(Math.sqrt(D * D - 1) / Math.cos(alpha_c)));\n\n    if (this.lat0 < 0) {\n      this.u_0 = -this.u_0;\n    }\n  }\n\n  F = 0.5 * gamma0;\n  this.v_pole_n = this.ArB * Math.log(Math.tan(FORTPI - F));\n  this.v_pole_s = this.ArB * Math.log(Math.tan(FORTPI + F));\n}\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ---------------------------------------------------------- */\nexport function forward(p) {\n  var coords = {};\n  var S, T, U, V, W, temp, u, v;\n  p.x = p.x - this.lam0;\n\n  if (Math.abs(Math.abs(p.y) - HALF_PI) > EPSLN) {\n    W = this.E / Math.pow(tsfnz(this.e, p.y, Math.sin(p.y)), this.B);\n\n    temp = 1 / W;\n    S = 0.5 * (W - temp);\n    T = 0.5 * (W + temp);\n    V = Math.sin(this.B * p.x);\n    U = (S * this.singam - V * this.cosgam) / T;\n\n    if (Math.abs(Math.abs(U) - 1.0) < EPSLN) {\n      throw new Error();\n    }\n\n    v = 0.5 * this.ArB * Math.log((1 - U) / (1 + U));\n    temp = Math.cos(this.B * p.x);\n\n    if (Math.abs(temp) < TOL) {\n      u = this.A * p.x;\n    } else {\n      u = this.ArB * Math.atan2((S * this.cosgam + V * this.singam), temp);\n    }\n  } else {\n    v = p.y > 0 ? this.v_pole_n : this.v_pole_s;\n    u = this.ArB * p.y;\n  }\n\n  if (this.no_rot) {\n    coords.x = u;\n    coords.y = v;\n  } else {\n    u -= this.u_0;\n    coords.x = v * this.cosrot + u * this.sinrot;\n    coords.y = u * this.cosrot - v * this.sinrot;\n  }\n\n  coords.x = (this.a * coords.x + this.x0);\n  coords.y = (this.a * coords.y + this.y0);\n\n  return coords;\n}\n\nexport function inverse(p) {\n  var u, v, Qp, Sp, Tp, Vp, Up;\n  var coords = {};\n\n  p.x = (p.x - this.x0) * (1.0 / this.a);\n  p.y = (p.y - this.y0) * (1.0 / this.a);\n\n  if (this.no_rot) {\n    v = p.y;\n    u = p.x;\n  } else {\n    v = p.x * this.cosrot - p.y * this.sinrot;\n    u = p.y * this.cosrot + p.x * this.sinrot + this.u_0;\n  }\n\n  Qp = Math.exp(-this.BrA * v);\n  Sp = 0.5 * (Qp - 1 / Qp);\n  Tp = 0.5 * (Qp + 1 / Qp);\n  Vp = Math.sin(this.BrA * u);\n  Up = (Vp * this.cosgam + Sp * this.singam) / Tp;\n\n  if (Math.abs(Math.abs(Up) - 1) < EPSLN) {\n    coords.x = 0;\n    coords.y = Up < 0 ? -HALF_PI : HALF_PI;\n  } else {\n    coords.y = this.E / Math.sqrt((1 + Up) / (1 - Up));\n    coords.y = phi2z(this.e, Math.pow(coords.y, 1 / this.B));\n\n    if (coords.y === Infinity) {\n      throw new Error();\n    }\n\n    coords.x = -this.rB * Math.atan2((Sp * this.cosgam - Vp * this.singam), Math.cos(this.BrA * u));\n  }\n\n  coords.x += this.lam0;\n\n  return coords;\n}\n\nexport var names = ['Hotine_Oblique_Mercator', 'Hotine Oblique Mercator', 'Hotine_Oblique_Mercator_variant_A', 'Hotine_Oblique_Mercator_Variant_B', 'Hotine_Oblique_Mercator_Azimuth_Natural_Origin', 'Hotine_Oblique_Mercator_Two_Point_Natural_Origin', 'Hotine_Oblique_Mercator_Azimuth_Center', 'Oblique_Mercator', 'omerc'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}